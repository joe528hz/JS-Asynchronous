"use strict";const btn=document.querySelector(".btn-country"),countriesContainer=document.querySelector(".countries"),renderCountry=function(data,classname=""){const html=`\n  <article class="country ${classname}">\n  <img class="country__img" src="${data.flags.png}" />\n  <div class="country__data">\n      <h3 class="country__name">${data.name.common}</h3>\n      <h4 class="country__region">${data.region}</h4>\n      <p class="country__row"><span>👫</span>${(+data.population/1e6).toFixed(1)} people</p>\n      <p class="country__row"><span>🗣️</span>${Object.values(data.languages)[0]}</p>\n      <p class="country__row"><span>💰</span>${Object.values(data.currencies)[0].name}</p>\n  </div>\n  </article>\n  `;countriesContainer.insertAdjacentHTML("beforeend",html),countriesContainer.style.opacity=1},renderError=function(message){countriesContainer.insertAdjacentText("beforeend",message)},getPosition=function(){return new Promise((function(resolve,reject){navigator.geolocation.getCurrentPosition(resolve,reject)}))},whereAmI=async function(){const pos=await getPosition(),{latitud:lat,longitude:lng}=pos.coords,resGeo=await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}&localityLanguage=en`),dataGeo=await resGeo.json(),[cname]=dataGeo.countryName.split(" ");console.log(cname);const res=await fetch(`https://restcountries.com/v3.1/name/${cname}`),data=await res.json();renderCountry(data[0])};whereAmI();