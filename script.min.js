"use strict";const btn=document.querySelector(".btn-country"),countriesContainer=document.querySelector(".countries"),renderCountry=function(data,classname=""){const html=`\n  <article class="country ${classname}">\n  <img class="country__img" src="${data.flags.png}" />\n  <div class="country__data">\n      <h3 class="country__name">${data.name.common}</h3>\n      <h4 class="country__region">${data.region}</h4>\n      <p class="country__row"><span>üë´</span>${(+data.population/1e6).toFixed(1)} people</p>\n      <p class="country__row"><span>üó£Ô∏è</span>${Object.values(data.languages)[0]}</p>\n      <p class="country__row"><span>üí∞</span>${Object.values(data.currencies)[0].name}</p>\n  </div>\n  </article>\n  `;countriesContainer.insertAdjacentHTML("beforeend",html),countriesContainer.style.opacity=1},renderError=function(message){countriesContainer.insertAdjacentText("beforeend",message)},getPosition=function(){return new Promise((function(resolve,reject){navigator.geolocation.getCurrentPosition(resolve,reject)}))},whereAmI=async function(){try{const pos=await getPosition(),{latitud:lat,longitude:lng}=pos.coords,resGeo=await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}&localityLanguage=en`);if(!resGeo.ok)throw new Error("Problem getting location data");const dataGeo=await resGeo.json(),[cname]=dataGeo.countryName.split(" "),res=await fetch(`https://restcountries.com/v3.1/name/${cname}`);if(!res.ok)throw new Error("Problem getting country");const data=await res.json();return renderCountry(data[0]),`You are in ${dataGeo.city}, ${dataGeo.country}`}catch(err){throw console.error(err),renderError(`${err.message}`),err}};console.log("1: Will get location"),async function(){try{const city=await whereAmI();console.log(`2: ${city}`)}catch(err){console.error(`2: ${err.message}`)}console.log("3: Finished getting location")}();